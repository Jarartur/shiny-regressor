install.packages('rsconnect')
rsconnect::setAccountInfo(name='jarartur', token='F84231279C524ED0C32EBC843B81188E', secret='VQunzJpu2zN22O10AaUsvg6P26O2I3eXmxcXpZ9z')
shiny::runApp('regressor2000')
runApp('regressor2000')
s
exit()
install.packages('shinyMatrix')
library(shinyMatrix)
matrix("", 1, 2, dimnames = c('X', 'Y'))
matrix("", 1, 2, dimnames = list('X', 'Y'))
matrix("", 1, 2, dimnames = list(NULL, c('X', 'Y')))
matrix(NULL, 1, 2, dimnames = list(NULL, c('X', 'Y')))
diag(3)
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
library(colourpicker)
runApp('regressor2000')
library(plotly)
install.packages('plotly')
library(plotly)
library(ggplot2)
library(dplyr)
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
m <- matrix("", 1, 2, dimnames = list(NULL, c("x", "y")))
m
as.data.frame(m)
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
m
m <- matrix(c(1, 2), 1, 2, dimnames = list(NULL, c("x", "y")))
m
as.data.frame(m)
m <- as.data.frame(m)
m
m[1]
m[1,1]
temp <- read.csv("test.csv", header=FALSE, sep=",", dec=".")
temp
temp <- read.csv("test.csv", header=FALSE, sep=",", dec=".", col.names=c('x', 'y'))
temp
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
temp
data <- temp
data
ggplot(data, aes(x, y)) +
geom_point(size=2, colour='blue') +
geom_smooth(method='lm',formula=y~x, size=2, colour='red')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
m <- matrix(c(1, 2), 1, 2, dimnames = list(NULL, c("x", "y")))
m
as.data.frame(m)
temp <- as.data.frame(m)
temp
length(temp)
ggplot(temp)
ggplot(temp, aes(x, y)) + geom_point()
m
m$x
temp$x
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
shiny::runApp('regressor2000')
data.frame(c('x'=1, 'y'=1))
data.frame(c('x'=1, 'y'=1), row.names=FALSE)
data.frame(c(1, 1), row.names=FALSE)
data.frame(c(1, 1))
data.frame(c(1, 1), col.names=c('x', 'y'))
data.frame(x=1, y=1)
runApp('regressor2000')
matrix(c(1, 2), 1, 2, dimnames = list(NULL, c("x", "y")))
runApp('regressor2000')
m <- matrix(c(1, 2), 1, 2, dimnames = list(NULL, c("x", "y")))
temp <- as.data.frame(m)
temp
temp$x
ggplot(temp, aes(x, y)) + geom_point()
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
?aes_string()
aes_string("test")
as.formula("y~x")
runApp('regressor2000')
y ~ poly(x, 3)
temp <- read.csv("test.csv", sep=' ', dec=',')
temp
temp <- read.table("test.csv", sep=' ', dec=',')
temp <- read.table("test.csv", sep=';', dec=',')
temp
temp <- read.table("test.csv", sep=';', dec=',', header = FALSE)
temp
for <- as.formula("y~poly(x,3)")
form <- as.formula("y~poly(x,3)")
form
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form)
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form)
form <- as.formula("y~poly(x,2)")
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form)
temp <- read.table("test.csv", sep=';', dec=',', header = FALSE)
temp
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form)
form <- as.formula("y~poly(x,3)")
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form)
runApp('regressor2000')
m <- lm(form, temp)
temp
form <- as.formula("V2~poly(V1,3)")
form
m <- lm(form, temp)
m
form <- as.formula("V2~poly(V1,2)")
m <- lm(form, temp)
m
m$coefficients
m$coefficients[2]
?equation
?expr
demo(plotmath)
expression("test")
expression(x^2)
expression("x^2")
parse(text = paste0('"Hello"', ' ~ r[xy] == ', cor2, '~ B^2')))
parse(text = paste0('"Hello"', ' ~ r[xy] == ', cor2, '~ B^2'))
parse(text = paste0('"Hello"', ' ~ r[xy] == ', '~ B^2'))
runApp('regressor2000')
runApp('regressor2000')
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form)
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(x=expression(frac(m,g)))
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=expression(frac(m,g)))
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=expression(paste("y = ", m$coefficients[2], "x + ", m$coefficients[1])))
?bquote
m
bquote("y = ", m$coefficients[2], "x + ", m$coefficients[1])
bquote(y == m$coefficients[2] x + m$coefficients[1])
rsquarelm2 <- 0.855463
bquote(R^2 == .(round(rsquarelm2, 2)))
bquote(y == .(m$coefficients[2]) x + .(m$coefficients[1]))
bquote(y == .(m$coefficients[2]) ~ x + .(m$coefficients[1]))
cor <- -.321
cor2 <- '-.321'
bquote("Hello" ~ r[xy] == .(cor) ~ "and" ~ B^2)
m$coefficients[2]
value(m$coefficients[2])
m$coefficients[2]
m$coefficients[1,2]
m$coefficients[2,1]
m$coefficients
m$coefficients[2]
m$coefficients[[2]]
bquote(y == .(m$coefficients[[2]]) ~ x + .(m$coefficients[[1]]))
form
as.string(form)
?as.string
as.string(form)
bquote(y == 2 x^3)
bquote(y == 2 x^3^)
bquote(y == 2 ~ x^3^)
bquote(y == 2 ~ x^3)
m$coefficients
runApp('regressor2000')
runApp('regressor2000')
bquote(y == .(m$coefficients[[2]]) ~ x .(m$coefficients[[1]]))
bquote(R^2 == .(round(rsquarelm2, 2)))
bquote(R^2 == .(m$coefficients[[1]])
bquote(R^2 == .(m$coefficients[[1]]))
bquote(R^2 == .(m$coefficients[[1]]))
bquote(R^2 .(m$coefficients[[1]]))
bquote(R^2 ~ .(m$coefficients[[1]]))
runApp('regressor2000')
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=bquote(y == .(m$coefficients[[2]]) ~ x ~ .(m$coefficients[[1]])))
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=bquote(y == .(m$coefficients[[2]]) + x ~ .(m$coefficients[[1]])))
runApp('regressor2000')
eq <- bquote(y == .(m$coefficients[[2]]) + x ~ .(m$coefficients[[1]]))
eq
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=eq)
runApp('regressor2000')
m$coefficients[[2]]
m
m$coefficients <- round(m$coefficients, 4)
m
m$coefficients <- round(m$coefficients, 2)
m
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=eq)
bquote(y == .(m$coefficients[[2]]) + x ~ .(m$coefficients[[1]]))
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=eq)
eq <- bquote(y == .(m$coefficients[[2]]) + x ~ .(m$coefficients[[1]]))
ggplot(temp, aes(V1, V2)) + geom_line(stat='smooth', method='lm', formula=form) + labs(title=eq)
runApp('regressor2000')
m
summary(m)
summary(m)$r.squared
c(summary(m)$r.squared, m$coefficients)
data.frame(R-squared = summary(m)$r.squared)
data.frame('R-squared' = summary(m)$r.squared)
data.frame('R-squared' = summary(m)$r.squared, m$coefficients)
data.frame(m$coefficients)
m$coefficients
m$coefficients + summary(m)$r.squared
m$coefficients['R squared'] <- summary(m)$r.squared
m$coefficients
runApp('regressor2000')
m
runApp('regressor2000')
m$coefficients
as.data.frame(m$coefficients)
typeof(m$coefficients)
temp
typeof(temp)
as.data.frame(Value = m$coefficients)
as.data.frame('Valuje' = m$coefficients)
as.data.frame(m$coefficients, col.names='value')
as.data.frame(m$coefficients, col.names=c("Values"))
temp2 <- as.data.frame(m$coefficients)
temp2
colnames(temp2) <- c("Values")
temp2
temp2 <- as.data.frame(m$coefficients, colnames=c("Values"))
temp2
colnames(as.data.frame(m$coefficients) <- c("Values"))
parameters <- as.data.frame(m$coefficients)
colnames(parameters) <- c("Values")
parameters
t(parameters)
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp('regressor2000')
runApp()
runApp()
runApp('regressor2000')
library(shinythemes)
runApp('regressor2000')
runApp('regressor2000')
